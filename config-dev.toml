# Default application config

# Url to database
db_url = "dev.db"

# Testing mode: copy files from input to element pool instead of deleting
testing_mode = true
 
# If true, files in input_folder will be scanned periodically
# Otherwise, import can be triggered manually in dashboard
auto_scan_files = false

# Set max log level
# - off
# - error
# - warn
# - info
# - debug
# - trace
log_level = "info"

# IP address to bind server to
bind_address = "127.0.0.1"

# Server port
port = 8081

# File to write logs
log_file = "log.txt"

# Directory that will be scanned to find new element files
input_folder = "res"

# How to read files:
# - sequential: use one thread,
# - parallel: use multiple threads.
# With `parallel` performance may suffer when reading from HDD
read_files = "sequential"

# Max number of files stored in memory at the same time.
# Files data are read first to memory, then hashed and freed.
# Bigger values can speed up file scanning, but may use more memory.
max_files_in_memory = 192

# Path to ffmpeg.
# Required to generate thumbnails for animation
# ffmpeg_path = "ffmpeg"

# If specified, pixiv metadata fetcher will work for appropriate images
# [pixiv_credentials]
# # Pixiv refresh token
# refresh_token = "PUT YOUR REFRESH TOKEN"
# # Pixiv client id
# client_id = "PUT YOUR CLIENT ID"
# # Pixiv client secret
# client_secret = "PUT YOUR CLIENT SECRET"

# Directory where renamed element files will be placed
[element_pool]
# URLs must include trailing and leading slashes
url = "/pool/"
# Path to physical folder
path = "pool"
# Serve from nndb
serve = true


# Store and serve thumbnails from this folder
[thumbnails_folder]
url = "/thumbs/"   
path = "thumbs"
serve = true


# Folder with miscellaneous static files  
[static_folder]
url = "/static/"
path = "target/dist"
serve = true

